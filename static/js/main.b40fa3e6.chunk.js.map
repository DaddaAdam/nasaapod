{"version":3,"sources":["components/NasaPhotoComponent.js","components/Home.js","components/Favorites.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","img","position","width","height","display","date","flexGrow","bottom","spacing","favIcon","addToFavorites","photoDataParameter","favoritesArray","previousData","JSON","parse","localStorage","getItem","push","title","media_type","url","explanation","isFavorite","Map","map","obj","stringify","values","removeDuplicates","setItem","NasaPhoto","useState","photoData","setPhotoData","api_key","setIsFavorite","classes","useEffect","a","fetch","res","json","data","fetchPhoto","className","Typography","variant","align","color","IconButton","edge","size","onClick","splice","findIndex","arrayElement","removeFromFavorites","src","alt","frameBorder","gesture","allow","allowFullScreen","paragraph","appbar","scrollBackTop","nphoto","buttonGroup","flexDirection","alignItems","margin","defaultProps","bgcolor","m","border","ScrollTop","props","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Home","isDarkTheme","String","darkMode","setDarkMode","createMuiTheme","palette","type","Fragment","CssBaseline","ThemeProvider","Paper","elevation","AppBar","Toolbar","Button","location","reload","id","ButtonGroup","aria-label","component","Link","to","Array","x","i","Container","Grid","wrap","container","Box","mx","boxShadow","borderColor","borderRadius","Fab","Favorites","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b40fa3e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"100%\",\r\n  },\r\n  img: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    display: \"inline\",\r\n  },\r\n  date: {\r\n    position: \"relative\",\r\n    flexGrow: 1,\r\n    bottom: theme.spacing(2),\r\n  },\r\n  favIcon: {\r\n    position: \"relative\",\r\n  },\r\n}));\r\n\r\nconst removeDuplicates = (favoritesArray) => {\r\n  let q = [\r\n    ...new Map(\r\n      favoritesArray.map((obj) => [JSON.stringify(obj), obj])\r\n    ).values(),\r\n  ];\r\n\r\n  return q;\r\n};\r\n\r\nconst addToFavorites = (photoDataParameter) => {\r\n  let favoritesArray = [];\r\n\r\n  /* \r\n    On utilise JSON.parse par ce que la clé est stockée sous forme de string\r\n  et on a besoin de la convertir on objet JSON \r\n  */\r\n  let previousData = JSON.parse(localStorage.getItem(\"favorites\"));\r\n\r\n  /*\r\n    Si previousData est différent de null, c'est qu'on a des objets en favoris\r\n  On les rajoute donc à la liste \r\n  */\r\n  if (previousData) favoritesArray = previousData;\r\n\r\n  /* On stocke les propriétés du nouveau favoris dans le tableau */\r\n  favoritesArray.push({\r\n    title: photoDataParameter.title,\r\n    date: photoDataParameter.date,\r\n    media_type: photoDataParameter.media_type,\r\n    url: photoDataParameter.url,\r\n    explanation: photoDataParameter.explanation,\r\n    isFavorite: true,\r\n  });\r\n\r\n  favoritesArray = removeDuplicates(favoritesArray);\r\n\r\n  /* \r\n      On enregistre les modifications dans le cache\r\n\r\n      On utilise la méthode JSON.stringify() par ce que le cache\r\n    fonctionne par un système de key: value, on doit donc donner\r\n    à la clé \"favorites\" une seule et unique valeur sous forme de string\r\n  */\r\n  localStorage.setItem(\"favorites\", JSON.stringify(favoritesArray));\r\n};\r\n\r\nconst removeFromFavorites = (photoDataParameter) => {\r\n  let favoritesArray = [];\r\n\r\n  /* \r\n    On utilise JSON.parse par ce que la clé est stockée sous forme de string\r\n  et on a besoin de la convertir on objet JSON \r\n  */\r\n  let previousData = JSON.parse(localStorage.getItem(\"favorites\"));\r\n\r\n  /*\r\n    Si previousData est différent de null, c'est qu'on a des objets en favoris\r\n  On les rajoute donc à la liste \r\n  */\r\n  if (previousData) favoritesArray = previousData;\r\n\r\n  function alreadyExists(arrayElement) {\r\n    return arrayElement.url === photoDataParameter.url;\r\n  }\r\n\r\n  favoritesArray.splice(favoritesArray.findIndex(alreadyExists), 1);\r\n\r\n  localStorage.setItem(\"favorites\", JSON.stringify(favoritesArray));\r\n};\r\n\r\nexport default function NasaPhoto() {\r\n  const [photoData, setPhotoData] = useState(null);\r\n  const api_key = \"rxtd7YyfZkoVoCorbjbuOnWptyDoP7alg8ULJxG4\";\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    fetchPhoto();\r\n\r\n    /*\r\n        On utilise async await ici puisque la fonction fetch() nous retourne une promesse\r\n        Ça permet donc de raccourcir le code\r\n     */\r\n    async function fetchPhoto() {\r\n      const res = await fetch(\r\n        `https://api.nasa.gov/planetary/apod?api_key=${api_key}&count=1`\r\n      );\r\n\r\n      const data = await res.json();\r\n      setPhotoData(data);\r\n    }\r\n  }, []);\r\n\r\n  if (!photoData) return <div />;\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <div className={classes.root}>\r\n          {/* Titre et date de la photo */}\r\n          <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\">\r\n            {photoData[0].title}\r\n          </Typography>\r\n          {/* Bouton favoris */}\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"inherit\"\r\n            size=\"medium\"\r\n            className={classes.favIcon}\r\n            onClick={() => {\r\n              if (isFavorite === false) addToFavorites(photoData[0]);\r\n              else removeFromFavorites(photoData[0]);\r\n\r\n              setIsFavorite(!isFavorite);\r\n            }}\r\n          >\r\n            {isFavorite ? <StarIcon /> : <StarBorderOutlinedIcon />}\r\n          </IconButton>\r\n          <Typography variant=\"body1\" align=\"center\" className={classes.date}>\r\n            {photoData[0].date}\r\n          </Typography>\r\n        </div>\r\n        {/*Parfois l'API peut nous retourner une vidéo au lieu d'une photo\r\n      On rajoute donc une condition pour gérer les cas où on reçoit une vidéo */}\r\n        {photoData[0].media_type === \"image\" ? (\r\n          <img\r\n            src={photoData[0].url}\r\n            alt={photoData[0].title}\r\n            className={classes.img}\r\n          />\r\n        ) : (\r\n          <iframe\r\n            title={photoData[0].title}\r\n            src={photoData[0].url}\r\n            frameBorder=\"0\"\r\n            gesture=\"media\"\r\n            allow=\"encrypted-media\"\r\n            allowFullScreen\r\n            className={classes.img}\r\n          />\r\n        )}\r\n        <div>\r\n          {/* Description de la photo */}\r\n          <Typography\r\n            variant=\"h5\"\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            paragraph\r\n          >\r\n            {photoData[0].explanation}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NasaPhoto from \"./NasaPhotoComponent\";\r\nimport { Grid, Container, Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\n/* Avec la fonction makeStyles, on peut créer des objets qui\r\nvont contenir des propriétés css, qu'on peut en suite\r\nappliquer aux composants avec la propriété className */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: \"sticky\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appbar: {\r\n    width: \"100%\",\r\n  },\r\n  scrollBackTop: {\r\n    position: \"relative\",\r\n    bottom: theme.spacing(6),\r\n  },\r\n  nphoto: {\r\n    width: \"100%\",\r\n  },\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst defaultProps = {\r\n  bgcolor: \"background.paper\",\r\n  m: 1,\r\n  border: 1,\r\n};\r\n\r\nfunction ScrollTop(props) {\r\n  const { children, window } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\">\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nexport default function Home(props) {\r\n  /*Le but c'est de stocker une variable dans le cache du navigateur\r\n  pour mémoriser le choix de l'utilisateur en ce qui concerne la couleur du theme*/\r\n  let isDarkTheme = window.localStorage.getItem(\"isDarkTheme\") === String(true);\r\n\r\n  const [darkMode, setDarkMode] = useState(isDarkTheme);\r\n  //useState est un Hook d'état qui permet d'initialiser la page au thème sauvegardé dans le cache\r\n\r\n  const classes = useStyles();\r\n  /* on instancie l'objet dans lequel nos propriétés css sont stockées */\r\n\r\n  /*Material UI permet d'appliquer directement des thèmes sur ses\r\n  composants, il suffit juste de les stocker dans une variable d'état\r\n  et de la passer en attribut d'une balise ThemeProvider*/\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: darkMode ? \"dark\" : \"light\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <React.Fragment className={classes.nphoto}>\r\n      <CssBaseline />\r\n      {/* ThemeProvider permet d'appliquer des themes sur les balises filles */}\r\n      <ThemeProvider theme={theme} className={classes.root}>\r\n        {/* La balise paper permet d'avoir un arrière plan opaque avec des bordures*/}\r\n        <Paper elevation={3} className={classes.root}>\r\n          {/*elevation représente l'ombre*/}\r\n          <AppBar position=\"sticky\">\r\n            <Toolbar className={classes.appbar}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  setDarkMode(!darkMode);\r\n                  localStorage.setItem(\"isDarkTheme\", String(!darkMode));\r\n                }}\r\n              >\r\n                {darkMode ? <BrightnessHighIcon /> : <Brightness4Icon />}\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                {`Toggle ${darkMode ? \"light\" : \"dark\"} mode`}\r\n              </Typography>\r\n              <Button\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                <Typography>Load more</Typography>\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Toolbar id=\"back-to-top-anchor\">\r\n            <div className={classes.buttonGroup}>\r\n              <ButtonGroup\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                aria-label=\"text primary button group\"\r\n              >\r\n                <Button component={Link}>\r\n                  <Typography variant=\"h5\">HomePage</Typography>\r\n                </Button>\r\n                <Button component={Link} to=\"/nasaapod/favorites\">\r\n                  <Typography variant=\"h5\">Favorites</Typography>\r\n                </Button>\r\n              </ButtonGroup>\r\n            </div>\r\n          </Toolbar>\r\n          <div className={classes.root}>\r\n            {/* Je crée un tableau de taille 10 et je boucle à travers\r\n          afin de faire le rendu de ce composant 10 fois */}\r\n            {[...Array(10)].map((x, i) => (\r\n              <Container maxWidth=\"md\">\r\n                <Grid\r\n                  wrap=\"noWrap\"\r\n                  container\r\n                  spacing={12}\r\n                  className={classes.nphoto}\r\n                >\r\n                  {/* Le composant box est responsable de tout ce qui concerne\r\n                les bordures des cartes, leur taille, angles, couleur... */}\r\n                  <Box\r\n                    mx=\"auto\"\r\n                    border={2}\r\n                    boxShadow={3}\r\n                    borderColor=\"grey.500\"\r\n                    {...defaultProps}\r\n                    borderRadius={16}\r\n                    {...defaultProps}\r\n                  >\r\n                    {/* Le composant qui contient les photos */}\r\n                    <NasaPhoto />\r\n                  </Box>\r\n                </Grid>\r\n              </Container>\r\n            ))}\r\n          </div>\r\n          {/* Bouton rouge en bas de page qui ramène en début de page */}\r\n          <ScrollTop {...props}>\r\n            <Fab\r\n              color=\"secondary\"\r\n              size=\"medium\"\r\n              aria-label=\"scroll back to top\"\r\n              className={classes.scrollBackTop}\r\n            >\r\n              <KeyboardArrowUpIcon />\r\n            </Fab>\r\n          </ScrollTop>\r\n        </Paper>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { Grid, Container, Paper } from \"@material-ui/core\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    display: \"inline\",\r\n  },\r\n  date: {\r\n    position: \"relative\",\r\n    flexGrow: 1,\r\n    bottom: theme.spacing(2),\r\n  },\r\n  favIcon: {\r\n    position: \"relative\",\r\n  },\r\n  root: {\r\n    position: \"sticky\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appbar: {\r\n    width: \"100%\",\r\n  },\r\n  scrollBackTop: {\r\n    position: \"relative\",\r\n    bottom: theme.spacing(6),\r\n  },\r\n  nphoto: {\r\n    width: \"100%\",\r\n  },\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector(\r\n      \"#back-to-top-anchor\"\r\n    );\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\">\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nconst defaultProps = {\r\n  bgcolor: \"background.paper\",\r\n  m: 1,\r\n  border: 1,\r\n};\r\n\r\nexport default function Favorites(props) {\r\n  const [isFavorite, setIsFavorite] = useState(true);\r\n  const classes = useStyles();\r\n\r\n  let isDarkTheme = window.localStorage.getItem(\"isDarkTheme\") === String(true);\r\n  const [darkMode, setDarkMode] = useState(isDarkTheme);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: darkMode ? \"dark\" : \"light\",\r\n    },\r\n  });\r\n\r\n  let favoritesArray = [];\r\n  let previousData = JSON.parse(localStorage.getItem(\"favorites\"));\r\n  if (previousData) favoritesArray = previousData;\r\n\r\n  if (!favoritesArray)\r\n    return (\r\n      <Typography variant=\"h1\" align=\"center\" color=\"textPrimary\">\r\n        Aucun favoris pour le moment...\r\n      </Typography>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment className={classes.nphoto}>\r\n        <CssBaseline />\r\n        <ThemeProvider theme={theme} className={classes.root}>\r\n          <Paper elevation={3} className={classes.root}>\r\n            <AppBar position=\"sticky\">\r\n              <Toolbar className={classes.appbar}>\r\n                <IconButton\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  onClick={() => {\r\n                    setDarkMode(!darkMode);\r\n                    localStorage.setItem(\"isDarkTheme\", String(!darkMode));\r\n                  }}\r\n                >\r\n                  {darkMode ? <BrightnessHighIcon /> : <Brightness4Icon />}\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  {`Toggle ${darkMode ? \"light\" : \"dark\"} mode`}\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Toolbar id=\"back-to-top-anchor\">\r\n              <div className={classes.buttonGroup}>\r\n                <ButtonGroup\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  aria-label=\"text primary button group\"\r\n                >\r\n                  <Button component={Link} to=\"/nasaapod\">\r\n                    <Typography variant=\"h5\">HomePage</Typography>\r\n                  </Button>\r\n                  <Button>\r\n                    <Typography variant=\"h5\">Favorites</Typography>\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </div>\r\n            </Toolbar>\r\n            <div className={classes.root}>\r\n              {/* Je crée un tableau de taille 10 et je boucle à travers\r\n          afin de faire le rendu de ce composant 10 fois */}\r\n\r\n              {/* Les favoris iront ici */}\r\n              {favoritesArray.map((photoData) => {\r\n                return (\r\n                  <Container maxWidth=\"md\">\r\n                    <Grid\r\n                      wrap=\"noWrap\"\r\n                      container\r\n                      spacing={12}\r\n                      className={classes.nphoto}\r\n                    >\r\n                      {/* Le composant box est responsable de tout ce qui concerne\r\n                            les bordures des cartes, leur taille, angles, couleur... */}\r\n                      <Box\r\n                        mx=\"auto\"\r\n                        border={2}\r\n                        boxShadow={3}\r\n                        borderColor=\"grey.500\"\r\n                        {...defaultProps}\r\n                        borderRadius={16}\r\n                        {...defaultProps}\r\n                      >\r\n                        <div className={classes.root}>\r\n                          <div className={classes.root}>\r\n                            {/* Titre et date de la photo */}\r\n                            <Typography\r\n                              variant=\"h2\"\r\n                              align=\"center\"\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              {photoData.title}\r\n                            </Typography>\r\n                            {/* Bouton favoris */}\r\n                            <IconButton\r\n                              edge=\"end\"\r\n                              color=\"inherit\"\r\n                              size=\"medium\"\r\n                              className={classes.favIcon}\r\n                              onClick={() => {\r\n                                if (isFavorite === false) {\r\n                                  setIsFavorite(!isFavorite);\r\n                                }\r\n                              }}\r\n                            >\r\n                              {isFavorite ? (\r\n                                <StarIcon />\r\n                              ) : (\r\n                                <StarBorderOutlinedIcon />\r\n                              )}\r\n                            </IconButton>\r\n                            <Typography\r\n                              variant=\"body1\"\r\n                              align=\"center\"\r\n                              className={classes.date}\r\n                            >\r\n                              {photoData.date}\r\n                            </Typography>\r\n                          </div>\r\n                          {/*Parfois l'API peut nous retourner une vidéo au lieu d'une photo\r\n                      On rajoute donc une condition pour gérer les cas où on reçoit une vidéo */}\r\n                          {photoData.media_type === \"image\" ? (\r\n                            <img\r\n                              src={photoData.url}\r\n                              alt={photoData.title}\r\n                              className={classes.img}\r\n                            />\r\n                          ) : (\r\n                            <iframe\r\n                              title={photoData.title}\r\n                              src={photoData.url}\r\n                              frameBorder=\"0\"\r\n                              gesture=\"media\"\r\n                              allow=\"encrypted-media\"\r\n                              allowFullScreen\r\n                              className={classes.img}\r\n                            />\r\n                          )}\r\n                          <div>\r\n                            {/* Description de la photo */}\r\n                            <Typography\r\n                              variant=\"h5\"\r\n                              align=\"center\"\r\n                              color=\"textSecondary\"\r\n                              paragraph\r\n                            >\r\n                              {photoData.explanation}\r\n                            </Typography>\r\n                          </div>\r\n                        </div>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Container>\r\n                );\r\n              })}\r\n            </div>\r\n            <ScrollTop {...props}>\r\n              <Fab\r\n                color=\"secondary\"\r\n                size=\"medium\"\r\n                aria-label=\"scroll back to top\"\r\n                className={classes.scrollBackTop}\r\n              >\r\n                <KeyboardArrowUpIcon />\r\n              </Fab>\r\n            </ScrollTop>\r\n          </Paper>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport NasaPhoto from \"./components/NasaPhotoComponent\";\nimport Favorites from \"./components/Favorites\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Route component={Home} path=\"/nasaapod\" exact />\n        <Route component={NasaPhoto} path=\"/nasaapod/nasaphotocomponent\" />\n        <Route component={Favorites} path=\"/nasaapod/favorites\" />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}